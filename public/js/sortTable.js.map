{"version":3,"sources":["sortTable.js"],"names":["stIsIE","sorttable","init","arguments","callee","done","_timer","clearInterval","document","createElement","getElementsByTagName","DATE_RE","forEach","table","className","search","makeSortable","length","the","appendChild","rows","insertBefore","firstChild","tHead","sortbottomrows","i","tFoot","tfo","headrow","cells","match","mtch","override","sorttable_sortfunction","guessType","sorttable_columnindex","sorttable_tbody","tBodies","dean_addEvent","innerSortFunction","e","this","reverse","replace","theadrow","parentNode","childNodes","cell","nodeType","row_array","col","j","getInnerText","sort","tb","column","sortfn","sort_alpha","text","sort_numeric","possdate","first","parseInt","second","sort_ddmm","sort_mmdd","node","hasInputs","getAttribute","textContent","innerText","nodeName","toLowerCase","value","nodeValue","tbody","newrows","a","b","aa","parseFloat","isNaN","bb","y","m","d","dt1","dt2","shaker_sort","list","comp_func","t","swap","q","addEventListener","test","navigator","userAgent","setInterval","readyState","element","type","handler","$$guid","guid","events","handlers","handleEvent","removeEvent","removeEventListener","event","returnValue","fixEvent","ownerDocument","parentWindow","window","$$handleEvent","preventDefault","stopPropagation","onload","cancelBubble","Array","array","block","context","call","Function","prototype","object","key","String","string","split","chr","index","resolve","Object"],"mappings":"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","file":"sortTable.js","sourcesContent":["/*\n SortTable\n version 2\n 7th April 2007\n Stuart Langridge, http://www.kryogenix.org/code/browser/sorttable/\n\n Instructions:\n Download this file\n Add <script src=\"sorttable.js\"></script> to your HTML\n Add class=\"sortable\" to any table you'd like to make sortable\n Click on the headers to sort\n\n Thanks to many, many people for contributions and suggestions.\n Licenced as X11: http://www.kryogenix.org/code/browser/licence.html\n This basically means: do what you want with it.\n */\n\n\nvar stIsIE = /*@cc_on!@*/false;\n\nsorttable = {\n    init: function() {\n        // quit if this function has already been called\n        if (arguments.callee.done) return;\n        // flag this function so we don't do the same thing twice\n        arguments.callee.done = true;\n        // kill the timer\n        if (_timer) clearInterval(_timer);\n\n        if (!document.createElement || !document.getElementsByTagName) return;\n\n        sorttable.DATE_RE = /^(\\d\\d?)[\\/\\.-](\\d\\d?)[\\/\\.-]((\\d\\d)?\\d\\d)$/;\n\n        forEach(document.getElementsByTagName('table'), function(table) {\n            if (table.className.search(/\\bsortable\\b/) != -1) {\n                sorttable.makeSortable(table);\n            }\n        });\n\n    },\n\n    makeSortable: function(table) {\n        if (table.getElementsByTagName('thead').length == 0) {\n            // table doesn't have a tHead. Since it should have, create one and\n            // put the first table row in it.\n            the = document.createElement('thead');\n            the.appendChild(table.rows[0]);\n            table.insertBefore(the,table.firstChild);\n        }\n        // Safari doesn't support table.tHead, sigh\n        if (table.tHead == null) table.tHead = table.getElementsByTagName('thead')[0];\n\n        // if (table.tHead.rows.length != 1) return; // can't cope with two header rows\n        // it can now :)\n\n        // Sorttable v1 put rows with a class of \"sortbottom\" at the bottom (as\n        // \"total\" rows, for example). This is B&R, since what you're supposed\n        // to do is put them in a tfoot. So, if there are sortbottom rows,\n        // for backwards compatibility, move them to tfoot (creating it if needed).\n        sortbottomrows = [];\n        for (var i=0; i<table.rows.length; i++) {\n            if (table.rows[i].className.search(/\\bsortbottom\\b/) != -1) {\n                sortbottomrows[sortbottomrows.length] = table.rows[i];\n            }\n        }\n        if (sortbottomrows) {\n            if (table.tFoot == null) {\n                // table doesn't have a tfoot. Create one.\n                tfo = document.createElement('tfoot');\n                table.appendChild(tfo);\n            }\n            for (var i=0; i<sortbottomrows.length; i++) {\n                tfo.appendChild(sortbottomrows[i]);\n            }\n            // commented because of babel error\n            // delete sortbottomrows;\n        }\n\n        // work through each column and calculate its type\n        headrow = table.tHead.rows[table.tHead.rows.length - 1].cells;\n        for (var i=0; i<headrow.length; i++) {\n            // manually override the type with a sorttable_type attribute\n            if (!headrow[i].className.match(/\\bsorttable_nosort\\b/)) { // skip this col\n                mtch = headrow[i].className.match(/\\bsorttable_([a-z0-9]+)\\b/);\n                if (mtch) { override = mtch[1]; }\n                if (mtch && typeof sorttable[\"sort_\"+override] == 'function') {\n                    headrow[i].sorttable_sortfunction = sorttable[\"sort_\"+override];\n                } else {\n                    headrow[i].sorttable_sortfunction = sorttable.guessType(table,i);\n                }\n                // make it clickable to sort\n                headrow[i].sorttable_columnindex = i;\n                headrow[i].sorttable_tbody = table.tBodies[0];\n                dean_addEvent(headrow[i],\"click\", sorttable.innerSortFunction = function(e) {\n\n                    if (this.className.search(/\\bsorttable_sorted\\b/) != -1) {\n                        // if we're already sorted by this column, just\n                        // reverse the table, which is quicker\n                        sorttable.reverse(this.sorttable_tbody);\n                        this.className = this.className.replace('sorttable_sorted',\n                            'sorttable_sorted_reverse');\n                        // commented to get rid of icons\n                        // this.removeChild(document.getElementById('sorttable_sortfwdind'));\n                        // sortrevind = document.createElement('span');\n                        // sortrevind.id = \"sorttable_sortrevind\";\n                        // sortrevind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">5</font>' : '&nbsp;&#x25B4;';\n                        // this.appendChild(sortrevind);\n                        return;\n                    }\n                    if (this.className.search(/\\bsorttable_sorted_reverse\\b/) != -1) {\n                        // if we're already sorted by this column in reverse, just\n                        // re-reverse the table, which is quicker\n                        sorttable.reverse(this.sorttable_tbody);\n                        this.className = this.className.replace('sorttable_sorted_reverse',\n                            'sorttable_sorted');\n                        // commented to get rid of icons\n                        // this.removeChild(document.getElementById('sorttable_sortrevind'));\n                        // sortfwdind = document.createElement('span');\n                        // sortfwdind.id = \"sorttable_sortfwdind\";\n                        // sortfwdind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">6</font>' : '&nbsp;&#x25BE;';\n                        // this.appendChild(sortfwdind);\n                        return;\n                    }\n\n                    // remove sorttable_sorted classes\n                    theadrow = this.parentNode;\n                    forEach(theadrow.childNodes, function(cell) {\n                        if (cell.nodeType == 1) { // an element\n                            cell.className = cell.className.replace('sorttable_sorted_reverse','');\n                            cell.className = cell.className.replace('sorttable_sorted','');\n                        }\n                    });\n                    // commented to get rid of icons\n                    // sortfwdind = document.getElementById('sorttable_sortfwdind');\n                    // if (sortfwdind) { sortfwdind.parentNode.removeChild(sortfwdind); }\n                    // sortrevind = document.getElementById('sorttable_sortrevind');\n                    // if (sortrevind) { sortrevind.parentNode.removeChild(sortrevind); }\n\n                    this.className += ' sorttable_sorted';\n                    // commented to get rid of icons\n                    // sortfwdind = document.createElement('span');\n                    // sortfwdind.id = \"sorttable_sortfwdind\";\n                    // sortfwdind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">6</font>' : '&nbsp;&#x25BE;';\n                    // this.appendChild(sortfwdind);\n\n                    // build an array to sort. This is a Schwartzian transform thing,\n                    // i.e., we \"decorate\" each row with the actual sort key,\n                    // sort based on the sort keys, and then put the rows back in order\n                    // which is a lot faster because you only do getInnerText once per row\n                    row_array = [];\n                    col = this.sorttable_columnindex;\n                    rows = this.sorttable_tbody.rows;\n                    for (var j=0; j<rows.length; j++) {\n                        row_array[row_array.length] = [sorttable.getInnerText(rows[j].cells[col]), rows[j]];\n                    }\n                    /* If you want a stable sort, uncomment the following line */\n                    //sorttable.shaker_sort(row_array, this.sorttable_sortfunction);\n                    /* and comment out this one */\n                    row_array.sort(this.sorttable_sortfunction);\n\n                    tb = this.sorttable_tbody;\n                    for (var j=0; j<row_array.length; j++) {\n                        tb.appendChild(row_array[j][1]);\n                    }\n\n                    // commented because of babel error\n                    // delete row_array;\n                });\n            }\n        }\n    },\n\n    guessType: function(table, column) {\n        // guess the type of a column based on its first non-blank row\n        sortfn = sorttable.sort_alpha;\n        for (var i=0; i<table.tBodies[0].rows.length; i++) {\n            text = sorttable.getInnerText(table.tBodies[0].rows[i].cells[column]);\n            if (text != '') {\n                if (text.match(/^-?[£$¤]?[\\d,.]+%?$/)) {\n                    return sorttable.sort_numeric;\n                }\n                // check for a date: dd/mm/yyyy or dd/mm/yy\n                // can have / or . or - as separator\n                // can be mm/dd as well\n                possdate = text.match(sorttable.DATE_RE)\n                if (possdate) {\n                    // looks like a date\n                    first = parseInt(possdate[1]);\n                    second = parseInt(possdate[2]);\n                    if (first > 12) {\n                        // definitely dd/mm\n                        return sorttable.sort_ddmm;\n                    } else if (second > 12) {\n                        return sorttable.sort_mmdd;\n                    } else {\n                        // looks like a date, but we can't tell which, so assume\n                        // that it's dd/mm (English imperialism!) and keep looking\n                        sortfn = sorttable.sort_ddmm;\n                    }\n                }\n            }\n        }\n        return sortfn;\n    },\n\n    getInnerText: function(node) {\n        // gets the text we want to use for sorting for a cell.\n        // strips leading and trailing whitespace.\n        // this is *not* a generic getInnerText function; it's special to sorttable.\n        // for example, you can override the cell text with a customkey attribute.\n        // it also gets .value for <input> fields.\n\n        if (!node) return \"\";\n\n        hasInputs = (typeof node.getElementsByTagName == 'function') &&\n            node.getElementsByTagName('input').length;\n\n        if (node.getAttribute(\"sorttable_customkey\") != null) {\n            return node.getAttribute(\"sorttable_customkey\");\n        }\n        else if (typeof node.textContent != 'undefined' && !hasInputs) {\n            return node.textContent.replace(/^\\s+|\\s+$/g, '');\n        }\n        else if (typeof node.innerText != 'undefined' && !hasInputs) {\n            return node.innerText.replace(/^\\s+|\\s+$/g, '');\n        }\n        else if (typeof node.text != 'undefined' && !hasInputs) {\n            return node.text.replace(/^\\s+|\\s+$/g, '');\n        }\n        else {\n            switch (node.nodeType) {\n                case 3:\n                    if (node.nodeName.toLowerCase() == 'input') {\n                        return node.value.replace(/^\\s+|\\s+$/g, '');\n                    }\n                case 4:\n                    return node.nodeValue.replace(/^\\s+|\\s+$/g, '');\n                    break;\n                case 1:\n                case 11:\n                    var innerText = '';\n                    for (var i = 0; i < node.childNodes.length; i++) {\n                        innerText += sorttable.getInnerText(node.childNodes[i]);\n                    }\n                    return innerText.replace(/^\\s+|\\s+$/g, '');\n                    break;\n                default:\n                    return '';\n            }\n        }\n    },\n\n    reverse: function(tbody) {\n        // reverse the rows in a tbody\n        newrows = [];\n        for (var i=0; i<tbody.rows.length; i++) {\n            newrows[newrows.length] = tbody.rows[i];\n        }\n        for (var i=newrows.length-1; i>=0; i--) {\n            tbody.appendChild(newrows[i]);\n        }\n        // commented because of babel error\n        // delete newrows;\n    },\n\n    /* sort functions\n     each sort function takes two parameters, a and b\n     you are comparing a[0] and b[0] */\n    sort_numeric: function(a,b) {\n        aa = parseFloat(a[0].replace(/[^0-9.-]/g,''));\n        if (isNaN(aa)) aa = 0;\n        bb = parseFloat(b[0].replace(/[^0-9.-]/g,''));\n        if (isNaN(bb)) bb = 0;\n        return aa-bb;\n    },\n    /*\n     Sort case-insensitively\n     Making sorttable sort your columns case-insensitively (so uppercase and lowercase letters sort together) requires editing sorttable.js. Find the lines:\n     */\n    // sort_alpha: function(a,b) {\n    //     if (a[0]==b[0]) return 0;\n    //     if (a[0]<b[0]) return -1;\n    //     return 1;\n    // },\n    //     and change them for\n    sort_alpha: function(a,b) {\n        if (a[0].toLowerCase()==b[0].toLowerCase()) return 0;\n        if (a[0].toLowerCase()<b[0].toLowerCase()) return -1;\n        return 1;\n    },\n    sort_ddmm: function(a,b) {\n        mtch = a[0].match(sorttable.DATE_RE);\n        y = mtch[3]; m = mtch[2]; d = mtch[1];\n        if (m.length == 1) m = '0'+m;\n        if (d.length == 1) d = '0'+d;\n        dt1 = y+m+d;\n        mtch = b[0].match(sorttable.DATE_RE);\n        y = mtch[3]; m = mtch[2]; d = mtch[1];\n        if (m.length == 1) m = '0'+m;\n        if (d.length == 1) d = '0'+d;\n        dt2 = y+m+d;\n        if (dt1==dt2) return 0;\n        if (dt1<dt2) return -1;\n        return 1;\n    },\n    sort_mmdd: function(a,b) {\n        mtch = a[0].match(sorttable.DATE_RE);\n        y = mtch[3]; d = mtch[2]; m = mtch[1];\n        if (m.length == 1) m = '0'+m;\n        if (d.length == 1) d = '0'+d;\n        dt1 = y+m+d;\n        mtch = b[0].match(sorttable.DATE_RE);\n        y = mtch[3]; d = mtch[2]; m = mtch[1];\n        if (m.length == 1) m = '0'+m;\n        if (d.length == 1) d = '0'+d;\n        dt2 = y+m+d;\n        if (dt1==dt2) return 0;\n        if (dt1<dt2) return -1;\n        return 1;\n    },\n\n    shaker_sort: function(list, comp_func) {\n        // A stable sort function to allow multi-level sorting of data\n        // see: http://en.wikipedia.org/wiki/Cocktail_sort\n        // thanks to Joseph Nahmias\n        var b = 0;\n        var t = list.length - 1;\n        var swap = true;\n\n        while(swap) {\n            swap = false;\n            for(var i = b; i < t; ++i) {\n                if ( comp_func(list[i], list[i+1]) > 0 ) {\n                    var q = list[i]; list[i] = list[i+1]; list[i+1] = q;\n                    swap = true;\n                }\n            } // for\n            t--;\n\n            if (!swap) break;\n\n            for(var i = t; i > b; --i) {\n                if ( comp_func(list[i], list[i-1]) < 0 ) {\n                    var q = list[i]; list[i] = list[i-1]; list[i-1] = q;\n                    swap = true;\n                }\n            } // for\n            b++;\n\n        } // while(swap)\n    }\n}\n\n/* ******************************************************************\n Supporting functions: bundled here to avoid depending on a library\n ****************************************************************** */\n\n// Dean Edwards/Matthias Miller/John Resig\n\n/* for Mozilla/Opera9 */\nif (document.addEventListener) {\n    document.addEventListener(\"DOMContentLoaded\", sorttable.init, false);\n}\n\n/* for Internet Explorer */\n/*@cc_on @*/\n/*@if (@_win32)\n document.write(\"<script id=__ie_onload defer src=javascript:void(0)><\\/script>\");\n var script = document.getElementById(\"__ie_onload\");\n script.onreadystatechange = function() {\n if (this.readyState == \"complete\") {\n sorttable.init(); // call the onload handler\n }\n };\n /*@end @*/\n\n/* for Safari */\nif (/WebKit/i.test(navigator.userAgent)) { // sniff\n    var _timer = setInterval(function() {\n        if (/loaded|complete/.test(document.readyState)) {\n            sorttable.init(); // call the onload handler\n        }\n    }, 10);\n}\n\n/* for other browsers */\nwindow.onload = sorttable.init;\n\n// written by Dean Edwards, 2005\n// with input from Tino Zijdel, Matthias Miller, Diego Perini\n\n// http://dean.edwards.name/weblog/2005/10/add-event/\n\nfunction dean_addEvent(element, type, handler) {\n    if (element.addEventListener) {\n        element.addEventListener(type, handler, false);\n    } else {\n        // assign each event handler a unique ID\n        if (!handler.$$guid) handler.$$guid = dean_addEvent.guid++;\n        // create a hash table of event types for the element\n        if (!element.events) element.events = {};\n        // create a hash table of event handlers for each element/event pair\n        var handlers = element.events[type];\n        if (!handlers) {\n            handlers = element.events[type] = {};\n            // store the existing event handler (if there is one)\n            if (element[\"on\" + type]) {\n                handlers[0] = element[\"on\" + type];\n            }\n        }\n        // store the event handler in the hash table\n        handlers[handler.$$guid] = handler;\n        // assign a global event handler to do all the work\n        element[\"on\" + type] = handleEvent;\n    }\n};\n// a counter used to create unique IDs\ndean_addEvent.guid = 1;\n\nfunction removeEvent(element, type, handler) {\n    if (element.removeEventListener) {\n        element.removeEventListener(type, handler, false);\n    } else {\n        // delete the event handler from the hash table\n        if (element.events && element.events[type]) {\n            delete element.events[type][handler.$$guid];\n        }\n    }\n};\n\nfunction handleEvent(event) {\n    var returnValue = true;\n    // grab the event object (IE uses a global event object)\n    event = event || fixEvent(((this.ownerDocument || this.document || this).parentWindow || window).event);\n    // get a reference to the hash table of event handlers\n    var handlers = this.events[event.type];\n    // execute each event handler\n    for (var i in handlers) {\n        this.$$handleEvent = handlers[i];\n        if (this.$$handleEvent(event) === false) {\n            returnValue = false;\n        }\n    }\n    return returnValue;\n};\n\nfunction fixEvent(event) {\n    // add W3C standard event methods\n    event.preventDefault = fixEvent.preventDefault;\n    event.stopPropagation = fixEvent.stopPropagation;\n    return event;\n};\nfixEvent.preventDefault = function() {\n    this.returnValue = false;\n};\nfixEvent.stopPropagation = function() {\n    this.cancelBubble = true;\n}\n\n// Dean's forEach: http://dean.edwards.name/base/forEach.js\n/*\n forEach, version 1.0\n Copyright 2006, Dean Edwards\n License: http://www.opensource.org/licenses/mit-license.php\n */\n\n// array-like enumeration\nif (!Array.forEach) { // mozilla already supports this\n    Array.forEach = function(array, block, context) {\n        for (var i = 0; i < array.length; i++) {\n            block.call(context, array[i], i, array);\n        }\n    };\n}\n\n// generic enumeration\nFunction.prototype.forEach = function(object, block, context) {\n    for (var key in object) {\n        if (typeof this.prototype[key] == \"undefined\") {\n            block.call(context, object[key], key, object);\n        }\n    }\n};\n\n// character enumeration\nString.forEach = function(string, block, context) {\n    Array.forEach(string.split(\"\"), function(chr, index) {\n        block.call(context, chr, index, string);\n    });\n};\n\n// globally resolve forEach enumeration\nvar forEach = function(object, block, context) {\n    if (object) {\n        var resolve = Object; // default\n        if (object instanceof Function) {\n            // functions have a \"length\" property\n            resolve = Function;\n        } else if (object.forEach instanceof Function) {\n            // the object implements a custom forEach method so use that\n            object.forEach(block, context);\n            return;\n        } else if (typeof object == \"string\") {\n            // the object is a string\n            resolve = String;\n        } else if (typeof object.length == \"number\") {\n            // the object is array-like\n            resolve = Array;\n        }\n        resolve.forEach(object, block, context);\n    }\n};"]}